<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:views="clr-namespace:NMSM.Views"
                    xmlns:controlLibrary="clr-namespace:NMSM.ControlLibrary;assembly=NMSM.ControlLibrary">
    <Style x:Key="{x:Type views:ApplicationShell}" TargetType="{x:Type Window}">
        <Setter Property="TextElement.FontFamily" Value="./Fonts/#GeosansLight-NMS" />
        <Setter Property="Icon" Value="./Images/NMS_LOGO.png" />
        <!--<Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />-->
    </Style>

    <Style x:Key="ContentRoot" TargetType="Panel">
        <Setter Property="Margin" Value="5" />
        <Setter Property="TextElement.FontSize" Value="16" />
    </Style>

    <Style x:Key="{x:Type Button}" TargetType="Button">
        <Setter Property="Padding" Value="20,10" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#f6f6f6" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Focusable" Value="True" />
    </Style>

    <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="ContentTitle" TargetType="Control">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="18" />
    </Style>
    
    <Style x:Key="{x:Type TextBox}" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsReadOnly" Value="True" />
        <Style.Triggers>
            <!--<EventTrigger RoutedEvent="MouseDoubleClick">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsReadOnly" >
                                <BooleanAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteBooleanKeyFrame Value="False" KeyTime="0" />
                                </BooleanAnimationUsingKeyFrames.KeyFrames>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            
            <EventTrigger RoutedEvent="LostFocus">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsReadOnly" >
                                <BooleanAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteBooleanKeyFrame Value="True" KeyTime="0" />
                                </BooleanAnimationUsingKeyFrames.KeyFrames>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>-->

            <Trigger Property="IsReadOnly" Value="False">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="CornflowerBlue" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>